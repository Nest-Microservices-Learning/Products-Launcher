version: "3"
services:
  # ====================
  # NATS Server
  # ====================
  nats-server:
    image: nats:latest
    ports:
      - "8222:8222"

  # ====================
  #  Gateway
  # ====================
  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_URL=${NATS_URL}

  # ====================
  # Products Microservice
  # ====================
  products-ms:
    build: ./products-ms
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PRODUCTS_MS_PORT}
      - NATS_URL=${NATS_URL}
      - DATABASE_URL=file:./dev.db

  # ====================
  # Orders Microservice
  # ====================
  orders-ms:
    depends_on:
      - orders-db
    build: ./orders-ms
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${ORDERS_MS_PORT}
      - NATS_URL=${NATS_URL}
      - DATABASE_URL=${DATABASE_URL_POSTGRES_ORDERS_MS}

  # ====================
  # Orders Database
  # ====================
  orders-db:
    container_name: orders-database
    image: postgres:16.2
    restart: always
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  # ====================
  # Payments Microservice
  # ====================
  payments-ms:
    build: ./payments-ms
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - NATS_URL=${NATS_URL}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
